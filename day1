3. Solve
Create Point class Point2D   : for representing a point in x-y co-ordinate system.


#include<iostream.h>
struct point
{
intx,inty;
};

int main()
{
point A,B,C;
cout<<"enter coordinates for p1:";
cin>>A.x>>a.y;
cout<<"enter coordinates for p2:";
cin>>B.x>>B.y;

c.x=A.x>>B.y;
c.y=B.x>>B.y;

cout<<"coordinates of point p1+p2 are:"<<C.x<<","<<C.y;

return 0;
}


3.1 Create a parameterized constructor to accept x & y co-ords.


public static string[][] plot point(string[][] plot){
int x=0,y=0;
scanner sc = new scanner(system.in);
boolean bool=true;
while(bool) {
         system.out.println("enter x coordinates:");
         x=sc.next int();
         system.out.println("entery coordinates:");
         y=sc.next int();
         
         if(x>=5||x<0||y>||5||y<0)  {
               system.out.println("the coordinates entered")
               } else  {
              y=y=1;
              bool=false;
              
              }
              
              }
              plot[plot.length-y][x] = "x";
              return plot;
              
              }
               





3.2 Add public String getDetails()) --to return string form point's x & y co-ords
eg : public String getDetails()
{
   return "Point ("+x+","+y+")";
}



public class pint 2D_1

 public static void main(string args[])
 point 2D pint2d_1=NEW POINT (20.0f,150,Of);
 double x,y;
 
 x=point2d_1.getX();
 y=point2d_1.getY();
 
 system.out.println("x coordinates=" + x + " , y coordinate = " + y);
 system.out.println("distance from + point 2d_1.distance(0, 0));
 


